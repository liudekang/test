{"version":3,"sources":["utils/request.js","pages/mangeImgs/index.css","pages/mangeImgs/index.js"],"names":["service","axios","create","timeout","withCredentials","interceptors","request","use","config","console","log","err","Promise","reject","response","status","data","error","module","exports","MangeImgs","useState","client","set_client","useEffect","osConfigstr","localStorage","getItem","createClintFn","window","Bmob","Query","get","then","res","value","setItem","catch","warn","message","osConfig","JSON","parse","newclient","OSS","region","bucket","iptChange","ev","a","files","target","length","file","reader","FileReader","FormData","append","put","name","result","className","type","id","onChange","onClick","list","listBuckets","src","alt","srcSet"],"mappings":"6GAAA,aAGMA,EAHN,OAGgBC,EAAMC,OAAO,CAE3BC,QAAS,IACTC,iBAAiB,IAEnBJ,EAAQK,aAAaC,QAAQC,KAAI,SAAAC,GAG/B,OADAC,QAAQC,IAAI,aAAcF,GACnBA,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAGxBX,EAAQK,aAAaS,SAASP,KAAI,SAAAC,GAGhC,OADAC,QAAQC,IAAI,gBACLF,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAIxBX,EAAQK,aAAaS,SAASP,KAC5B,SAAAO,GAIE,OAAwB,MAApBA,EAASC,QAAkBD,EAASE,KAC/BF,EAASE,KAEXF,KAET,SAAAG,GACE,OAAOL,QAAQC,OAAOI,MAGXjB,O,oBCxCfkB,EAAOC,QAAU,CAAC,SAAW,gD,sJC4GdC,UAjGG,WAAO,IAAD,EACOC,qBADP,mBACfC,EADe,KACPC,EADO,KAEtBC,qBAAU,WACR,IAAMC,EAAcC,aAAaC,QAAQ,uBACrCF,EACFG,EAAcH,GAEAI,OAAOC,KAAKC,MAAM,cAC1BC,IAAI,YAAYC,MAAK,SAAAC,GACrBA,EAAIC,QACNP,EAAcM,EAAIC,OAClBT,aAAaU,QAAQ,sBAAuBF,EAAIC,WAEjDE,OAAM,SAAA1B,GACPF,QAAQ6B,KAAK,SAAU3B,GACvB4B,IAAQtB,MAAM,gDAGjB,IAEH,IAAMW,EAAgB,SAACH,GACrB,IAAIe,EAAW,GACf,GAA2B,kBAAhBf,EACT,IACEe,EAAWC,KAAKC,MAAMjB,GACtB,MAAOR,GACPsB,IAAQtB,MAAM,gDAEPQ,GAAsC,kBAAhBA,EAC/Be,EAAWf,EAEXc,IAAQtB,MAAM,2CAGhB,IAAM0B,EAAY,IAAIC,IAAJ,aAChBC,OAAQ,kBACRC,OAAQ,6BACLN,IAELjB,EAAWoB,IAuBPI,EAAS,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACVC,EAAQF,EAAGG,OAAOD,QAEXA,EAAME,OAAS,IACpBC,EAAOH,EAAM,GACfI,EAAS,IAAIC,WACjB9C,QAAQC,IAAI,IAAKwC,EAAOG,EAAMC,KAElB,IAAIE,UAEZC,OAAO,OAAQP,EAAM,IAVX,kBAaO5B,EAAOoC,IAAI,QAAUR,EAAM,GAAGS,KAAMT,EAAM,IAbjD,OAaRU,EAbQ,OAcdnD,QAAQC,IAAI,IAAKkD,GAdH,kDAgBdnD,QAAQC,IAAI,IAAZ,MAhBc,0DAAH,sDAoBf,OACE,yBAAKmD,UAAU,OACb,wDACA,6BACE,2BAAOC,KAAK,OAAOH,KAAK,MAAMI,GAAG,GAAGC,SAAUjB,IAE9C,kBAAC,IAAD,CAAQkB,QA9CG,WAAM,4CAKrB,4BAAAhB,EAAA,+EAEyB3B,EAAO4C,KAAK,IAFrC,OAEUN,EAFV,OAMInD,QAAQC,IAAIkD,GANhB,gDAQInD,QAAQC,IAAR,MARJ,0DALqB,0DAiBrByD,KA6BI,gBACA,6BACA,yBAAKC,IAAI,iFAAiFC,IAAI,MAAMC,OAAO,KAL7G","file":"static/js/Page-mangeImgs.63c8847f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n//   baseURL: process.env.BASE_API, // api的base_url\r\n  timeout: 200000, // 请求超时时间\r\n  withCredentials: true, // 选项表明了是否是跨域请求\r\n})\r\nservice.interceptors.request.use(config => {\r\n//   Toast.loading('加载中',1)              // loading组件，显示文字加载中，自动关闭延时1s\r\n  console.log('request go', config);\r\n  return config;\r\n}, err => {\r\n  console.log('请求失败')\r\n  return Promise.reject(err)\r\n})\r\n// 拦截响应\r\nservice.interceptors.response.use(config => {\r\n//   Toast.hide()                             // 销毁Toast组件\r\n  console.log('response get')\r\n  return config;\r\n}, err => {\r\n  console.log('响应失败')\r\n  return Promise.reject(err)\r\n})\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    /**\r\n    * code为非000000是抛错 可结合自己业务进行修改\r\n    */\r\n    if (response.status === 200 && response.data) {\r\n      return response.data\r\n    }\r\n    return response\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nexport default service\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeWrap\":\"src-pages-mangeImgs-index-homeWrap-B1Ng8dm7\"};","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:00\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2019-11-24 19:46:26\r\n */\r\nimport React, { useEffect, useState } from 'react';\r\nimport service from 'Src/utils/request';\r\nimport { Button, message } from 'antd';\r\nimport OSS from 'ali-oss';\r\nimport styles from './index.css';\r\n\r\nconst MangeImgs = () => {\r\n  const [client, set_client] = useState()\r\n  useEffect(() => {\r\n    const osConfigstr = localStorage.getItem('os-hang-zhou-config');\r\n    if (osConfigstr) {\r\n      createClintFn(osConfigstr)\r\n    } else {\r\n      const query = window.Bmob.Query('api_config');\r\n      query.get('rCad333D').then(res => {\r\n        if (res.value) {\r\n          createClintFn(res.value);\r\n          localStorage.setItem('os-hang-zhou-config', res.value)\r\n        }\r\n      }).catch(err => {\r\n        console.warn('errr==', err)\r\n        message.error('获取oss配置失败')\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const createClintFn = (osConfigstr) => {\r\n    let osConfig = {};\r\n    if (typeof osConfigstr === 'string') {\r\n      try {\r\n        osConfig = JSON.parse(osConfigstr);\r\n      } catch (error) {\r\n        message.error('解析oss配置失败')\r\n      }\r\n    } else if (osConfigstr && typeof osConfigstr === 'object') {\r\n      osConfig = osConfigstr;\r\n    } else {\r\n      message.error('获取oss配置失败')\r\n    }\r\n\r\n    const newclient = new OSS({\r\n      region: 'oss-cn-hangzhou',\r\n      bucket: 'ldk-react16-test-20200608',\r\n      ...osConfig,\r\n    });\r\n    set_client(newclient)\r\n  }\r\n\r\n  const submitFn = () => {\r\n    // service.get('/api/users')\r\n    //   .then(res => {\r\n    //     console.log(11, res)\r\n    //   })\r\n    async function listBuckets() {\r\n      try {\r\n        const result = await client.list({\r\n          // 'max-keys': 3,\r\n        });\r\n        // const result = await client.put('object-name.txt', new Buffer('hello world'));// client.list();\r\n        console.log(result)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    listBuckets();\r\n  }\r\n\r\n  const iptChange = async(ev) => {\r\n    const files = ev.target.files;\r\n\r\n    if (files && files.length > 0) {\r\n      const file = files[0]\r\n      var reader = new FileReader();\r\n      console.log(222, files, file, reader)\r\n    }\r\n    const forms = new FormData()\r\n\r\n    forms.append('file', files[0])// new Buffer('hello world')\r\n\r\n    try {\r\n      const result = await client.put('imgs/' + files[0].name, files[0]);\r\n      console.log(444, result);\r\n    } catch (e) {\r\n      console.log(555, e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h6>上传图片</h6>\r\n      <div>\r\n        <input type='file' name='xxx' id='' onChange={iptChange} />\r\n\r\n        <Button onClick={submitFn}>提交</Button>\r\n        <hr />\r\n        <img src='https://ldk-react16-test-20200608.oss-cn-hangzhou.aliyuncs.com/imgs/Live2D.png' alt='www' srcSet='' />\r\n      //https://ldk-react16-test-20200608.oss-cn-hangzhou.aliyuncs.com/\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MangeImgs\r\n"],"sourceRoot":""}