{"version":3,"sources":["utils/request.js","pages/blogDetail/index.css","components/ReadOnlyMarkdown/CodeBlock.js","components/ReadOnlyMarkdown/Heading.js","components/ReadOnlyMarkdown/HeadingBlock.js","components/ReadOnlyMarkdown/index.js","pages/blogDetail/index.js"],"names":["service","axios","create","timeout","withCredentials","interceptors","request","use","config","console","log","err","Promise","reject","response","status","data","error","module","exports","CodeBlock","SyntaxHighlighter","registerLanguage","jsx","javascript","this","props","language","value","className","style","coy","PureComponent","defaultProps","elements","h1","h2","h3","h4","h5","h6","Heading","level","children","React","createElement","type","HeadingBlock","renderHtml","length","nodeValue","id","href","MangeImgs","renderData","useMemo","dirty","DOMPurify","sanitize","source","escapeHtml","renderers","code","heading","TopNav","location","useState","reqloading","set_reqloading","Map","detailData","set_detailData","useEffect","search","params","parse","slice","objectId","getBlogListFn","ids","window","Bmob","Query","get","then","res","fromJS","setTimeout","styles","nav_Topper_inner","spinning","size","ReadOnlyMarkdown","read_only_wrapper","height"],"mappings":"4GAAA,aAGMA,EAHN,OAGgBC,EAAMC,OAAO,CAE3BC,QAAS,IACTC,iBAAiB,IAEnBJ,EAAQK,aAAaC,QAAQC,KAAI,SAAAC,GAG/B,OADAC,QAAQC,IAAI,aAAcF,GACnBA,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAGxBX,EAAQK,aAAaS,SAASP,KAAI,SAAAC,GAGhC,OADAC,QAAQC,IAAI,gBACLF,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAIxBX,EAAQK,aAAaS,SAASP,KAC5B,SAAAO,GAIE,OAAwB,MAApBA,EAASC,QAAkBD,EAASE,KAC/BF,EAASE,KAEXF,KAET,SAAAG,GACE,OAAOL,QAAQC,OAAOI,MAGXjB,O,0CCxCfkB,EAAOC,QAAU,CAAC,kBAAoB,0D,8OCOhCC,E,mLAaFC,IAAkBC,iBAAiB,MAAOC,KAC1CF,IAAkBC,iBAAiB,aAAcE,O,+BAGzC,IAAD,EACsBC,KAAKC,MAA1BC,EADD,EACCA,SAAUC,EADX,EACWA,MAClB,OACE,4BAAQC,UAAU,aAChB,kBAAC,IAAD,CAAmBF,SAAUA,EAAUG,MAAOC,KAC3CH,Q,GAtBaI,iBAAlBZ,EAMGa,aAAe,CACpBN,SAAU,MAsBCP,Q,eCnCTc,EAAW,CACfC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,MAGN,SAASC,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAajB,EAAS,oCAC9C,OAAOkB,IAAMC,cAAcX,EAASQ,IAAUR,EAASC,GAAIT,EAAOiB,GAGpEF,EAAQR,aAAe,CACrBa,KAAM,MAGOL,QCSAM,E,4MAtBbC,WAAa,WAAO,IAAD,EACY,EAAKtB,MAA1BgB,EADS,EACTA,MAAOC,EADE,EACFA,SAEf,GAAIA,GAAYA,EAASM,OAAS,EAAG,CACnC,IAAMC,EAAYP,EAAS,GAAGjB,MAAME,MACpC,OACE,kBAAC,EAAD,CAASc,MAAK,WAAMA,GAASS,GAAID,GAC/B,0BAAMrB,UAAU,SAASc,GACzB,uBAAGS,KAAI,WAAMF,GAAarB,UAAU,QAApC,MAMJ,OAAO,oCAAGc,I,uDAIZ,OAAO,oCAAGlB,KAAKuB,kB,GAnBQhB,iBC0BrBqB,G,OAAY,SAAC,GAA0B,IAAxBrC,EAAuB,EAAvBA,KAAMa,EAAiB,EAAjBA,UAMnByB,EAAaC,mBAAQ,WACzB,IAAMC,EAAQxC,GAAQ,GAEtB,OADYyC,IAAUC,SAASF,KAE9B,CAACxC,IAEJ,OACE,kBAAC,IAAD,CACEa,UAAW,2BAA6BA,EACxC8B,OAAQL,EACRM,YAAY,EACZC,UAAW,CACTC,KAAM1C,EACN2C,QAAShB,OAejBM,EAAUpB,aAAe,CAEvBjB,KAAM,GACNa,UAAW,IAEEwB,Q,kBCxDTW,G,OAAS,SAACtC,GAAW,IACjBuC,EAAcvC,EAAduC,SADgB,EAEaC,oBAAS,GAFtB,mBAEjBC,EAFiB,KAELC,EAFK,OAGaF,mBAASG,YAAI,KAH1B,mBAGjBC,EAHiB,KAGLC,EAHK,KAIxBC,qBAAU,WAER,GAAkB,kBADV,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAUQ,QACO,CAC1B,IAAMC,EAASC,gBAAMV,EAASQ,OAAOG,MAAM,IACvCF,EAAOG,UACTC,EAAcJ,EAAOG,UAGzBpE,QAAQC,IAAI,KAAMgB,KAQjB,IAEH,IAAMoD,EAAgB,SAACC,GACrBX,GAAe,GACDY,OAAOC,KAAKC,MAAM,SAC1BC,IAAIJ,GAAKK,MAAK,SAAAC,GAClB5E,QAAQC,IAAI,GAAI2E,GAChBd,EAAee,YAAOD,IACtBE,YAAW,WACTnB,GAAe,KACd,SAIP,OACE,yBAAKvC,UAAW2D,IAAOC,kBAErB,kBAAC,IAAD,CAAMC,SAAUvB,GAEZG,EAAWqB,KACP,6BACA,4BAAKrB,EAAWa,IAAI,UACpB,6BACE,8BAAOb,EAAWa,IAAI,SACtB,kBAAC,IAAD,KAAMb,EAAWa,IAAI,SACrB,8BAAOb,EAAWa,IAAI,eAExB,kBAACS,EAAD,CACE5E,KAAMsD,EAAWa,IAAI,aACrBtD,UAAW2D,IAAOK,qBAGpB,iBAad7B,EAAO/B,aAAe,CACpB6D,OAAQ,KAEK9B","file":"static/js/Page-blogDetail.27001b9a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n//   baseURL: process.env.BASE_API, // api的base_url\r\n  timeout: 200000, // 请求超时时间\r\n  withCredentials: true, // 选项表明了是否是跨域请求\r\n})\r\nservice.interceptors.request.use(config => {\r\n//   Toast.loading('加载中',1)              // loading组件，显示文字加载中，自动关闭延时1s\r\n  console.log('request go', config);\r\n  return config;\r\n}, err => {\r\n  console.log('请求失败')\r\n  return Promise.reject(err)\r\n})\r\n// 拦截响应\r\nservice.interceptors.response.use(config => {\r\n//   Toast.hide()                             // 销毁Toast组件\r\n  console.log('response get')\r\n  return config;\r\n}, err => {\r\n  console.log('响应失败')\r\n  return Promise.reject(err)\r\n})\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    /**\r\n    * code为非000000是抛错 可结合自己业务进行修改\r\n    */\r\n    if (response.status === 200 && response.data) {\r\n      return response.data\r\n    }\r\n    return response\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nexport default service\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"read_only_wrapper\":\"src-pages-blogDetail-index-read_only_wrapper-3kPB4FWP\"};","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\r\n// 设置高亮样式\r\nimport { coy } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n// 设置高亮的语言\r\nimport { jsx, javascript, sass, scss } from 'react-syntax-highlighter/dist/esm/languages/prism';\r\n\r\nclass CodeBlock extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null,\r\n  };\r\n\r\n  componentWillMount() {\r\n    // 注册要高亮的语法，\r\n    // 注意：如果不设置打包后供第三方使用是不起作用的\r\n    SyntaxHighlighter.registerLanguage('jsx', jsx);\r\n    SyntaxHighlighter.registerLanguage('javascript', javascript);\r\n  }\r\n\r\n  render() {\r\n    const { language, value, } = this.props;\r\n    return (\r\n      <figure className='highlight'>\r\n        <SyntaxHighlighter language={language} style={coy}>\r\n          {value}\r\n        </SyntaxHighlighter>\r\n      </figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;\r\n","import React from 'react';\r\n\r\nconst elements = {\r\n  h1: 'h1',\r\n  h2: 'h2',\r\n  h3: 'h3',\r\n  h4: 'h4',\r\n  h5: 'h5',\r\n  h6: 'h6',\r\n};\r\n\r\nfunction Heading({ level, children, ...props }) {\r\n  return React.createElement(elements[level] || elements.h1, props, children);\r\n}\r\n\r\nHeading.defaultProps = {\r\n  type: 'h1',\r\n};\r\n\r\nexport default Heading;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cls from 'classnames';\r\nimport Heading from './Heading';\r\n\r\nclass HeadingBlock extends PureComponent {\r\n  renderHtml = () => {\r\n    const { level, children, } = this.props;\r\n\r\n    if (children && children.length > 0) {\r\n      const nodeValue = children[0].props.value;\r\n      return (\r\n        <Heading level={`h${level}`} id={nodeValue}>\r\n          <span className='title'>{children}</span>\r\n          <a href={`#${nodeValue}`} className='link'>\r\n            #\r\n          </a>\r\n        </Heading>\r\n      );\r\n    } else {\r\n      return <>{children}</>;\r\n    }\r\n  };\r\n  render() {\r\n    return <>{this.renderHtml()}</>;\r\n  }\r\n}\r\n\r\nexport default HeadingBlock;\r\n","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:00\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2019-11-24 19:46:26\r\n *\r\n * 可传参数\r\n * itemKey  --- key值\r\n * itemLabel --- label名\r\n * itemClassName --- 内置item的类名\r\n * itemRule --- 规则\r\n *\r\n * className --- 类名\r\n * placeholder\r\n * BraftEditorCallBackFn  --- 实时返回 html值\r\n *\r\n */\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\r\nimport service from 'Src/utils/request';\r\nimport { Button, message, Form } from 'antd';\r\nimport ReactMarkdown from 'react-markdown';\r\n//过滤xss的插件\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport CodeBlock from './CodeBlock';\r\nimport HeadingBlock from './HeadingBlock';\r\n\r\n// import styles from './index.css';\r\nimport './style.less';\r\n\r\nconst MangeImgs = ({ data, className, }) => {\r\n  // const [form] = Form.useForm();\r\n  // const [client, set_client] = useState()\r\n\r\n  // const input = '# This is a header\\n\\nAnd this is a paragraph'\r\n\r\n  const renderData = useMemo(() => {\r\n    const dirty = data || '';\r\n    var clean = DOMPurify.sanitize(dirty);\r\n    return clean\r\n  }, [data])\r\n\r\n  return (\r\n    <ReactMarkdown\r\n      className={'React_Markdown_readonly ' + className}\r\n      source={renderData}\r\n      escapeHtml={false}\r\n      renderers={{\r\n        code: CodeBlock,\r\n        heading: HeadingBlock,\r\n      }}\r\n    />\r\n  )\r\n}\r\nMangeImgs.propTypes = {\r\n  data: PropTypes.string,\r\n  // itemLabel: PropTypes.string,\r\n  // itemClassName: PropTypes.string,\r\n  // itemRule: PropTypes.array,\r\n\r\n  className: PropTypes.string,\r\n  // placeholder: PropTypes.string,\r\n  // BraftEditorCallBackFn: PropTypes.func,\r\n}\r\nMangeImgs.defaultProps = {\r\n  // itemKey: 'remark',\r\n  data: '',\r\n  className: '',\r\n};\r\nexport default MangeImgs\r\n","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:00\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2020-07-26 21:01:48\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Menu, Dropdown, Button, Spin, Tag } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { parse, stringify } from 'qs'\r\nimport { Map, fromJS } from 'immutable'\r\nimport ReadOnlyMarkdown from 'Src/components/ReadOnlyMarkdown';\r\nimport styles from './index.css';\r\nimport './index.less';\r\nconst TopNav = (props) => {\r\n  const { location, } = props\r\n  const [reqloading, set_reqloading] = useState(false)\r\n  const [detailData, set_detailData] = useState(Map({}));\r\n  useEffect(() => {\r\n    const sh = location?.search;\r\n    if (typeof sh === 'string') {\r\n      const params = parse(location.search.slice(1));\r\n      if (params.objectId) {\r\n        getBlogListFn(params.objectId)\r\n      }\r\n    }\r\n    console.log(1777, props)\r\n    // const current = window.Bmob ? window.Bmob.User.current() : null;\r\n    // if (current && typeof current === 'object') {\r\n    //   window.user = current\r\n    //   set_user(current)\r\n    //   set_isLogin(true)\r\n    // }\r\n    // console.log('user===', current)\r\n  }, [])\r\n\r\n  const getBlogListFn = (ids) => {\r\n    set_reqloading(true)\r\n    const query = window.Bmob.Query('blogs');\r\n    query.get(ids).then(res => {\r\n      console.log(33, res)\r\n      set_detailData(fromJS(res));\r\n      setTimeout(() => {\r\n        set_reqloading(false)\r\n      }, 200)\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.nav_Topper_inner}>\r\n\r\n      <Spin spinning={reqloading}>\r\n        {\r\n          detailData.size\r\n            ? <div>\r\n              <h5>{detailData.get('title')}</h5>\r\n              <div>\r\n                <span>{detailData.get('type')}</span>\r\n                <Tag>{detailData.get('tags')}</Tag>\r\n                <span>{detailData.get('createdAt')}</span>\r\n              </div>\r\n              <ReadOnlyMarkdown\r\n                data={detailData.get('textValue')}\r\n                className={styles.read_only_wrapper}\r\n              />\r\n            </div>\r\n            : 'nullllllll'\r\n        }\r\n\r\n      </Spin>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\nTopNav.propTypes = {\r\n  // 引入prop-types后，使用方式和之前相同\r\n  height: PropTypes.number,\r\n}\r\nTopNav.defaultProps = {\r\n  height: 500,\r\n}\r\nexport default TopNav\r\n"],"sourceRoot":""}