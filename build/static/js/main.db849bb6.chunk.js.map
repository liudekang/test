{"version":3,"sources":["router/RouterView.js","contextRedux/useConext.js","pages/loadingPage/index.js","components/TopNav/index.js","contextRedux/Provider.js","App.js","serviceWorker.js","index.js","components/TopNav/index.css","contextRedux/store.js","router/loadable.js","router/routeConfig.js","App.css","pages/loadingPage/index.css"],"names":["RouterView","props","routes","map","item","index","key","path","exact","render","location","redirect","to","children","component","useContext","React","Loading","className","styles","loadin_wrap","src","alt","title","TopNav","useConnect","storeContext","state","dispatch","useState","isLogin","set_isLogin","user","set_user","useEffect","current","window","Bmob","User","console","log","userName","nav_Topper_Wrap","nav_Topper_inner","nav_List","routeConfig","show","nav_Item","name","nav_topper_right","type","danger","nav_addblog_button","href","arrow","trigger","overlay","Item","onClick","logout","target","rel","placement","username","login_btn","Provider","store","value","initialize","App","useReducer","reducer","classnames","ee","pageWrapper","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","createContext","initialState","age","action","params","newState","ToastTrue","error","onclick","retry","timedOut","pastDelay","asyncLoader","fn","Loadable","loader","loading","delay","timeout","home","loadable","NoFont404Page","testAntv","testHook","mangeImgs","draftBlog","blogMange","blogDetail","login","setting","userList","loadingPage","administrators"],"mappings":"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","file":"static/js/main.db849bb6.chunk.js","sourcesContent":["/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:04\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2019-11-24 19:46:22\r\n */\r\nimport React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n// 引入\r\nimport PropTypes from 'prop-types'\r\n//  //如果没有传递该属性时的默认值\r\n//  static defaultProps = {\r\n//     name: 'stranger'\r\n//   }\r\n//   //如果传递该属性，该属性值必须为字符串\r\n//   static propTypes={\r\n//     name:PropTypes.string\r\n//   }\r\nconst RouterView = (props) =>\r\n// console.log(11, props, window.location)\r\n  <Switch>\r\n    {\r\n      props.routes.map((item, index) => (\r\n        <Route\r\n          key={index}\r\n          path={item.path}\r\n          exact={item.exact}\r\n          render={(location) => {\r\n          // 传递路由信息\r\n            if (item.redirect) {\r\n              return <Redirect to={item.redirect}></Redirect>\r\n            } else if (item.children) {\r\n            // console.log(item,item.children)\r\n              return <item.component {...location} routes={item.children} />\r\n            } else {\r\n              return <item.component {...location} />\r\n            }\r\n          }}\r\n        >\r\n        </Route>\r\n      )\r\n      )\r\n    }\r\n    {/* <Redirect to={\r\n      {\r\n        pathname: '404',\r\n        state: {\r\n          fromHref: window.location.href,\r\n          fromPathname: window.location.pathname,\r\n        },\r\n      }\r\n    }\r\n    /> */}\r\n  </Switch>\r\n\r\nRouterView.propTypes = {\r\n  // 引入prop-types后，使用方式和之前相同\r\n  routes: PropTypes.array,\r\n}\r\nexport default RouterView\r\n","import React from 'react';\r\n\r\nconst useContext = (props) => {\r\n  return React.useContext(props);\r\n}\r\nexport default useContext\r\n","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:00\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2019-11-24 20:01:12\r\n */\r\nimport React from 'react'\r\nimport { Spin } from 'antd'\r\n\r\nimport styles from './index.css';\r\nconst Loading = () => {\r\n  return (\r\n    <div className={styles.loadin_wrap}>\r\n      <img src='/dance.webp' alt='loading....' />\r\n      <h5 className={styles.title}>拼命加载中 ... ...</h5>\r\n      <Spin></Spin>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:00\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2019-11-24 20:01:12\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\nimport { Menu, Dropdown, Button } from 'antd'\r\nimport routeConfig from 'Src/router/routeConfig'\r\nimport useConnect from 'Src/contextRedux/useConext';\r\nimport { storeContext } from 'Src/contextRedux/store';\r\n\r\nimport styles from './index.css';\r\n\r\nconst TopNav = () => {\r\n  const { state, dispatch, } = useConnect(storeContext);\r\n  const [isLogin, set_isLogin] = useState(false)\r\n  const [user, set_user] = useState({})\r\n  useEffect(() => {\r\n    const current = window.Bmob ? window.Bmob.User.current() : null;\r\n    if (current && typeof current === 'object') {\r\n      window.user = current\r\n      set_user(current)\r\n      set_isLogin(true)\r\n    }\r\n    console.log('user===', current)\r\n  }, [state.userName])\r\n\r\n  const loginOutFn = () => {\r\n    window.Bmob && window.Bmob.User.logout();\r\n    set_user({})\r\n    set_isLogin(false)\r\n    window.user = null\r\n  }\r\n\r\n  return (\r\n    <nav className={styles.nav_Topper_Wrap}>\r\n      <div className={styles.nav_Topper_inner}>\r\n        {/* <h5 className={styles.user_name}>德康 空间</h5> */}\r\n        <ul className={styles.nav_List}>\r\n          {\r\n            routeConfig.routes.map(item => (\r\n              item.show && <li className={styles.nav_Item} key={item.path}><Link to={item.path}>{item.name}</Link></li>\r\n            ))\r\n          }\r\n        </ul>\r\n\r\n        <div className={styles.nav_topper_right}>\r\n        <Button type=\"primary\" danger className={styles.nav_addblog_button}><a href=\"/draftBlog\">写文章</a></Button>\r\n          {\r\n            isLogin\r\n              ? <Dropdown\r\n              arrow\r\n                trigger={['click']}\r\n                overlay={<Menu>\r\n                  <Menu.Item>\r\n\r\n                    个人中心\r\n                  {/* <a target='_blank' rel='noopener noreferrer' href='http://www.alipay.com/'>\r\n                  </a> */}\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <Link to='/setting/administrators'>设置</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <span onClick={loginOutFn}>\r\n                      退出登录\r\n                  </span>\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <a target='_blank' rel='noopener noreferrer' href='http://ldk.xihuan.fun:3001/deployLdk'>重新部署</a>\r\n                  </Menu.Item>\r\n                  <Menu.Item>\r\n                    <a target='_blank' rel='noopener noreferrer' href='http://ldk.xihuan.fun:3001/deployLdkLog'>部署日志</a>\r\n                  </Menu.Item>\r\n                </Menu>} placement='bottomRight'>\r\n                <Button>{user.username}</Button>\r\n              </Dropdown>\r\n              : <Link className={styles.login_btn} to='/login'>登录/注册</Link>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default TopNav\r\n","import React from 'react';\r\nimport { storeContext } from './store';\r\nconst Provider = (props) => {\r\n  return (\r\n    <storeContext.Provider value={props?.store}>\r\n      {props?.children}\r\n    </storeContext.Provider>\r\n  )\r\n}\r\nexport default Provider\r\n","/*\n * @Author: mikey.liudekang\n * @Date: 2019-09-17 20:58:08\n * @Last Modified by: mikey.liudekang\n * @Last Modified time: 2019-11-24 19:46:18\n */\nimport React, { useEffect, useReducer } from 'react'\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\nimport RouterView from './router/RouterView'\nimport routeConfig from './router/routeConfig'\nimport TopNav from './components/TopNav'\nimport classnames from 'classnames'\nimport Bmob from 'hydrogen-js-sdk';\nimport Provider from './contextRedux/Provider';\nimport { initialState as store, reducer } from './contextRedux/store';\n\nimport styles from './App.css'\n\n// 项目其他页面使用跟小程序一样使用Bmob对象即可，例如：\nBmob.initialize('e99514db934fd60b', '411527');\nwindow.Bmob = Bmob;\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, store);\n  useEffect(() => {\n    // 初始化 SDK版本 2.0.0 以下保留之前的初始化方法\n    // Bmob.initialize(\"你的Application ID\", \"你的REST API Key\");\n    // Bmob.initialize(\"你的Secret Key\", \"你的API 安全码\");\n\n    // Bmob.User.users().then(res => {\n    //   console.log(res)\n    // }).catch(err => {\n    //   console.log(err)\n    // })\n    // 项目其他页面使用跟小程序一样使用Bmob对象即可，例如：\n    // const params = {\n    //   username: 'dekang411527',\n    //   password: '411527hns',\n    //   email: '1530383507@qq.com',\n    //   phone: '18510253122',\n    // }\n\n    // Bmob.User.login(params.username, params.password).then(res => {\n    //   console.log(res)\n    // }).catch(err => {\n    //   console.warn(err)\n    // });\n  }, [])\n\n  return (\n    <Router>\n      <div className={classnames({\n        [styles['reactwrapper']]: true,\n        [styles.ee]: false,\n      })}>\n        <Provider store={{ state, dispatch, }}>\n          <TopNav></TopNav>\n          <div className={styles.pageWrapper}>\n            <RouterView routes={routeConfig.routes} />\n          </div>\n        </Provider>\n\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (this.process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(this.process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${this.process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        contentType != null && contentType.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ConfigProvider } from 'antd';\nimport App from './App';\nimport dayjs from 'dayjs';\nimport * as serviceWorker from './serviceWorker';\nimport zhCN from 'antd/lib/locale/zh_CN';\n\nimport './styles/index.less'\n// import 'dayjs/locale/zh-cn'\n// dayjs.locale('zh-cn')\nReactDOM.render(( \n        <App /> \n), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_Topper_Wrap\":\"src-components-TopNav-index-nav_Topper_Wrap-3tQGcnVg\",\"nav_Topper_inner\":\"src-components-TopNav-index-nav_Topper_inner-1yERhCR3\",\"nav_List\":\"src-components-TopNav-index-nav_List-2Ehgifbh\",\"nav_Item\":\"src-components-TopNav-index-nav_Item-q_UivmGx\",\"login_btn\":\"src-components-TopNav-index-login_btn-I6hDEkY5\",\"nav_topper_right\":\"src-components-TopNav-index-nav_topper_right-5wJgLCbW\",\"nav_addblog_button\":\"src-components-TopNav-index-nav_addblog_button-Q-03hwWZ\"};","import React from 'react';\r\nexport const storeContext = React.createContext();\r\nexport const initialState = {\r\n  userName: 'kiwis',\r\n  age: 23,\r\n}\r\nexport const reducer = (state, action) => {\r\n  const { type, params, } = action;\r\n  const newState = { ...state, }\r\n  switch (type) {\r\n    case 'change_userName':\r\n      newState.userName = params\r\n      return newState\r\n    default:\r\n      return initialState;\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Button } from 'antd'\r\nimport LoadingPage from 'Page/loadingPage';\r\n\r\nconst asyncLoader = (fn) => {\r\n  return Loadable({\r\n    loader: fn,\r\n    loading: ToastTrue,\r\n    delay: 500,\r\n    timeout: 60000,\r\n  });\r\n};\r\n\r\nfunction ToastTrue(props) {\r\n  //   {\r\n  //     error: null\r\n  //     isLoading: true\r\n  //     pastDelay: false\r\n  //     retry: ƒ ()\r\n  //     timedOut: false\r\n  //   }\r\n  // 当你需要loader的组件加载失败的时候，你的Loading组件将会接收到一个Error对象（如果成功了将会接收到一个null）\r\n  if (props.error) {\r\n    return <div>Error! <Button onclick={ props.retry }>Retry</Button></div>;\r\n  } else if (props.timedOut) {\r\n    return <div>Taking a long time... <Button onClick={ props.retry }>Retry</Button></div>;\r\n  } else if (props.pastDelay) {\r\n    return <LoadingPage />;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default asyncLoader;\r\n","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:56:20\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2020-07-26 20:42:57\r\n */\r\n\r\nimport loadable from './loadable'\r\n\r\n// import Home from 'Page/home/index'\r\n// import NoFont404Page from 'Page/NoFont404Page'\r\n// import testAntv from 'Page/testAntv'\r\n// import testHook from 'Page/testHook'\r\n// import mangeImgs from 'Page/mangeImgs'\r\n// import draftBlog from 'Page/draftBlog'\r\n// import login from 'Page/login'\r\n// import user from 'Page/user'\r\n// import setting from 'Page/setting'\r\n// import userList from 'Page/userList'\r\n// import loadingPage from 'Page/loadingPage'\r\n// import administrators from 'Page/administrators'\r\n\r\n// const wwww = loadable(() => import(/* webpackChunkName: \"Page-wwww\" */'Page/wwww'))\r\n\r\nconst home = loadable(() => import(/* webpackChunkName: \"Page-home\" */'Page/home'))\r\nconst NoFont404Page = loadable(() => import(/* webpackChunkName: \"Page-NoFont404Page\" */'Page/NoFont404Page'))\r\nconst testAntv = loadable(() => import(/* webpackChunkName: \"Page-testAntv\" */'Page/testAntv'))\r\nconst testHook = loadable(() => import(/* webpackChunkName: \"Page-testHook\" */'Page/testHook'))\r\nconst mangeImgs = loadable(() => import(/* webpackChunkName: \"Page-mangeImgs\" */'Page/mangeImgs'))\r\nconst draftBlog = loadable(() => import(/* webpackChunkName: \"Page-draftBlog\" */'Page/draftBlog'))\r\nconst blogMange = loadable(() => import(/* webpackChunkName: \"Page-blogMange\" */'Page/blogMange'))\r\nconst blogDetail = loadable(() => import(/* webpackChunkName: \"Page-blogDetail\" */'Page/blogDetail'))\r\nconst login = loadable(() => import(/* webpackChunkName: \"Page-login\" */'Page/login'))\r\nconst user = loadable(() => import(/* webpackChunkName: \"Page-user\" */'Page/user'))\r\nconst setting = loadable(() => import(/* webpackChunkName: \"Page-setting\" */'Page/setting'))\r\nconst userList = loadable(() => import(/* webpackChunkName: \"Page-userList\" */'Page/userList'))\r\nconst loadingPage = loadable(() => import(/* webpackChunkName: \"Page-loadingPage\" */'Page/loadingPage'))\r\nconst administrators = loadable(() => import(/* webpackChunkName: \"Page-administrators\" */'Page/administrators'))\r\nexport default {\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: '首页',\r\n      component: home,\r\n      exact: true,\r\n      show: true,\r\n    },\r\n    {\r\n      path: '/test/antv',\r\n      name: '测试antv页',\r\n      component: testAntv,\r\n    },\r\n    {\r\n      path: '/loading',\r\n      name: 'loading页面',\r\n      component: loadingPage,\r\n    },\r\n    {\r\n      path: '/test/hook',\r\n      name: '测试hook页',\r\n      component: testHook,\r\n    },\r\n    {\r\n      path: '/blogMange',\r\n      name: '文章管理页面',\r\n      component: blogMange,\r\n      show: true,\r\n    },\r\n    {\r\n      path: '/draftBlog',\r\n      name: '添加文章',\r\n      component: draftBlog,\r\n    },\r\n    {\r\n      path: '/blogDetail',\r\n      name: '文章',\r\n      component: blogDetail,\r\n    },\r\n    {\r\n      path: '/mangeImgs',\r\n      name: '管理图片',\r\n      show: true,\r\n      component: mangeImgs,\r\n    },\r\n    {\r\n      path: '/user/404',\r\n      name: '404页面',\r\n      component: NoFont404Page,\r\n    },\r\n    {\r\n      path: '/login',\r\n      name: '登录',\r\n      component: login,\r\n\r\n    },\r\n    {\r\n      path: '/user',\r\n      name: '个人中心',\r\n      component: user,\r\n    },\r\n    {\r\n      path: '/setting',\r\n      name: '设置',\r\n      component: setting,\r\n\r\n      children: [\r\n        {\r\n          path: '/setting/administrators',\r\n          name: '管理员列表',\r\n          component: administrators,\r\n        },\r\n        {\r\n          path: '/setting/userList',\r\n          name: '用户列表',\r\n          component: userList,\r\n        },\r\n      ],\r\n    },\r\n\r\n  ],\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactwrapper\":\"src-App-reactwrapper-tW5PZVOp\",\"ee\":\"src-App-ee-uoAKWlt6\",\"pageWrapper\":\"src-App-pageWrapper-191D55d4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadin_wrap\":\"src-pages-loadingPage-index-loadin_wrap-16BF4eiK\",\"title\":\"src-pages-loadingPage-index-title-2D_2kgmH\"};"],"sourceRoot":""}