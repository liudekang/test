{"version":3,"sources":["utils/request.js","pages/setting/index.css","pages/setting/index.js"],"names":["service","axios","create","timeout","withCredentials","interceptors","request","use","config","console","log","err","Promise","reject","response","status","data","error","module","exports","Setting","props","useEffect","className","styles","settong","slider","nav_link_item","to","content_page","routes"],"mappings":"6GAAA,aAGMA,EAHN,OAGgBC,EAAMC,OAAO,CAE3BC,QAAS,IACTC,iBAAiB,IAEnBJ,EAAQK,aAAaC,QAAQC,KAAI,SAAAC,GAG/B,OADAC,QAAQC,IAAI,aAAcF,GACnBA,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAGxBX,EAAQK,aAAaS,SAASP,KAAI,SAAAC,GAGhC,OADAC,QAAQC,IAAI,gBACLF,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAIxBX,EAAQK,aAAaS,SAASP,KAC5B,SAAAO,GAIE,OAAwB,MAApBA,EAASC,QAAkBD,EAASE,KAC/BF,EAASE,KAEXF,KAET,SAAAG,GACE,OAAOL,QAAQC,OAAOI,MAGXjB,O,oBCxCfkB,EAAOC,QAAU,CAAC,QAAU,2CAA2C,OAAS,0CAA0C,cAAgB,iDAAiD,aAAe,kD,iCCD1M,uEA8BeC,UAhBC,SAACC,GAIf,OAHAC,qBAAU,cAEP,IAED,yBAAKC,UAAWC,IAAOC,SACrB,yBAAKF,UAAWC,IAAOE,QACrB,kBAAC,IAAD,CAASH,UAAWC,IAAOG,cAAeC,GAAG,2BAA7C,kCACA,kBAAC,IAAD,CAASL,UAAWC,IAAOG,cAAeC,GAAG,qBAA7C,6BAEF,yBAAKL,UAAWC,IAAOK,cACrB,kBAAC,IAAD,CAAYC,OAAM,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAOS","file":"static/js/Page-setting.b9d8b483.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n//   baseURL: process.env.BASE_API, // api的base_url\r\n  timeout: 200000, // 请求超时时间\r\n  withCredentials: true, // 选项表明了是否是跨域请求\r\n})\r\nservice.interceptors.request.use(config => {\r\n//   Toast.loading('加载中',1)              // loading组件，显示文字加载中，自动关闭延时1s\r\n  console.log('request go', config);\r\n  return config;\r\n}, err => {\r\n  console.log('请求失败')\r\n  return Promise.reject(err)\r\n})\r\n// 拦截响应\r\nservice.interceptors.response.use(config => {\r\n//   Toast.hide()                             // 销毁Toast组件\r\n  console.log('response get')\r\n  return config;\r\n}, err => {\r\n  console.log('响应失败')\r\n  return Promise.reject(err)\r\n})\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    /**\r\n    * code为非000000是抛错 可结合自己业务进行修改\r\n    */\r\n    if (response.status === 200 && response.data) {\r\n      return response.data\r\n    }\r\n    return response\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nexport default service\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settong\":\"src-pages-setting-index-settong-2136dqAj\",\"slider\":\"src-pages-setting-index-slider-1-GDVAnq\",\"nav_link_item\":\"src-pages-setting-index-nav_link_item-1qlJsMvs\",\"content_page\":\"src-pages-setting-index-content_page-1HFE0UlM\"};","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:00\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2020-06-09 22:07:07\r\n */\r\nimport React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport RouterView from 'Src/router/RouterView'\r\nimport service from 'Src/utils/request';\r\n\r\nimport styles from './index.css'\r\n\r\nconst Setting = (props) => {\r\n  useEffect(() => {\r\n    // console.log(177, props)\r\n  }, [])\r\n  return (\r\n    <div className={styles.settong} >\r\n      <div className={styles.slider}>\r\n        <NavLink className={styles.nav_link_item} to='/setting/administrators'>管理员列表</NavLink>\r\n        <NavLink className={styles.nav_link_item} to='/setting/userList'>用户列表</NavLink>\r\n      </div>\r\n      <div className={styles.content_page}>\r\n        <RouterView routes={props?.routes} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Setting\r\n\r\n"],"sourceRoot":""}