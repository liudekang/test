{"version":3,"sources":["utils/request.js","pages/administrators/index.css","pages/administrators/index.js"],"names":["service","axios","create","timeout","withCredentials","interceptors","request","use","config","console","log","err","Promise","reject","response","status","data","error","module","exports","columns","title","dataIndex","key","administrators","useState","userList","Set_userList","useEffect","window","Bmob","Query","find","then","res","Array","isArray","resArr","filter","item","leave","toLowerCase","catch","message","warning","slice","className","styles","login","dataSource"],"mappings":"4GAAA,aAGMA,EAHN,OAGgBC,EAAMC,OAAO,CAE3BC,QAAS,IACTC,iBAAiB,IAEnBJ,EAAQK,aAAaC,QAAQC,KAAI,SAAAC,GAG/B,OADAC,QAAQC,IAAI,cACLF,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAGxBX,EAAQK,aAAaS,SAASP,KAAI,SAAAC,GAGhC,OADAC,QAAQC,IAAI,gBACLF,KACN,SAAAG,GAED,OADAF,QAAQC,IAAI,4BACLE,QAAQC,OAAOF,MAIxBX,EAAQK,aAAaS,SAASP,KAC5B,SAAAO,GAIE,OAAwB,MAApBA,EAASC,QAAkBD,EAASE,KAC/BF,EAASE,KAEXF,KAET,SAAAG,GACE,OAAOL,QAAQC,OAAOI,MAGXjB,O,oBCxCfkB,EAAOC,QAAU,CAAC,MAAQ,kD,iHCYpBC,EAAU,CACd,CACEC,MAAO,WACPC,UAAW,WACXC,IAAK,YAEP,CACEF,MAAO,qBACPC,UAAW,WACXC,IAAK,YAGP,CACEF,MAAO,eACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,qBACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,2BACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,uCACPC,UAAW,YACXC,IAAK,cA8BMC,UA1BQ,WAAO,IAAD,EACMC,mBAAS,IADf,mBACpBC,EADoB,KACVC,EADU,KAmB3B,OAjBAC,qBAAU,WACMC,OAAOC,KAAKC,MAAM,SAC1BC,OAAOC,MAAK,SAAAC,GAChB,GAAIC,MAAMC,QAAQF,GAAM,CACtB,IAAMG,EAASH,EAAII,QAAO,SAAAC,GAAI,MAAwC,QAAnCA,EAAKC,MAAQ,IAAIC,iBACpDd,EAAaU,OAEdK,OAAM,SAAA/B,GACPF,QAAQC,IAAIC,GACa,kBAAdA,EAAIM,MACb0B,IAAQC,QAAQjC,EAAIM,MAAM4B,MAAM,EAAG,MAEnCF,IAAQ1B,MAAM,iCAGjB,IAGD,yBAAK6B,UAAWC,IAAOC,OACrB,8DACA,kBAAC,IAAD,CAAO5B,QAASA,EAAS6B,WAAYvB","file":"static/js/Page-administrators.cc44c7be.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n//   baseURL: process.env.BASE_API, // api的base_url\r\n  timeout: 200000, // 请求超时时间\r\n  withCredentials: true, // 选项表明了是否是跨域请求\r\n})\r\nservice.interceptors.request.use(config => {\r\n//   Toast.loading('加载中',1)              // loading组件，显示文字加载中，自动关闭延时1s\r\n  console.log('request go');\r\n  return config;\r\n}, err => {\r\n  console.log('请求失败')\r\n  return Promise.reject(err)\r\n})\r\n// 拦截响应\r\nservice.interceptors.response.use(config => {\r\n//   Toast.hide()                             // 销毁Toast组件\r\n  console.log('response get')\r\n  return config;\r\n}, err => {\r\n  console.log('响应失败')\r\n  return Promise.reject(err)\r\n})\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    /**\r\n    * code为非000000是抛错 可结合自己业务进行修改\r\n    */\r\n    if (response.status === 200 && response.data) {\r\n      return response.data\r\n    }\r\n    return response\r\n  },\r\n  error => {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nexport default service\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"src-pages-administrators-index-login-1cixXZc-\"};","/*\r\n * @Author: mikey.liudekang\r\n * @Date: 2019-09-17 20:58:00\r\n * @Last Modified by: mikey.liudekang\r\n * @Last Modified time: 2020-06-09 22:07:07\r\n */\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { Table, Tag, Space, message } from 'antd';\r\nimport service from 'Src/utils/request';\r\n\r\nimport styles from './index.css'\r\n\r\nconst columns = [\r\n  {\r\n    title: 'objectId',\r\n    dataIndex: 'objectId',\r\n    key: 'objectId',\r\n  },\r\n  {\r\n    title: '用户名',\r\n    dataIndex: 'username',\r\n    key: 'username',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '邮箱',\r\n    dataIndex: 'email',\r\n    key: 'email',\r\n  },\r\n  {\r\n    title: '手机号',\r\n    dataIndex: 'phone',\r\n    key: 'phone',\r\n  },\r\n  {\r\n    title: '创建时间',\r\n    dataIndex: 'createdAt',\r\n    key: 'createdAt',\r\n  },\r\n  {\r\n    title: '最近活跃时间',\r\n    dataIndex: 'updatedAt',\r\n    key: 'updatedAt',\r\n  },\r\n];\r\n\r\nconst administrators = () => {\r\n  const [userList, Set_userList] = useState([])\r\n  useEffect(() => {\r\n    const query = window.Bmob.Query('_User');\r\n    query.find().then(res => {\r\n      if (Array.isArray(res)) {\r\n        const resArr = res.filter(item => (item.leave + '').toLowerCase() === 'p1')\r\n        Set_userList(resArr)\r\n      }\r\n    }).catch(err => {\r\n      console.log(err)\r\n      if (typeof err.error === 'string') {\r\n        message.warning(err.error.slice(0, 300))\r\n      } else {\r\n        message.error('操作失败')\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.login} >\r\n      <h6>管理员列表</h6>\r\n      <Table columns={columns} dataSource={userList} />\r\n    </div>\r\n  )\r\n}\r\nexport default administrators\r\n"],"sourceRoot":""}